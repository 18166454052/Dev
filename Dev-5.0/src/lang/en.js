export default {
  route: {
    dashboard: 'Dashboard',
    project: 'Project'
  },
  navbar: {
    logOut: 'Log Out',
    dashboard: 'Dashboard',
    screenfull: 'screenfull',
    theme: 'theme'
  },
  login: {
    title: 'Login Form',
    logIn: 'Log in',
    username: 'Username',
    password: 'Password',
    any: 'any',
    thirdparty: 'Or connect with',
    thirdpartyTips: 'Can not be simulated on local, so please combine you own business simulation! ! !'
  },
  projectIndex: {
    'Whether to delete this data': 'Whether to delete this data ?',
    create: 'Create Project',
    edit: 'Edit Project'
  },
  table: {
    projectName: 'Project Name',
    projectKey: 'projectKey',
    projectCreater: 'Created By',
    projectDescription: 'Comment',
    createTime: 'Create Time',
    action: 'Action',
    eventStreamName: 'Event Stream Name',
    eventStreamDes: 'Event Stream Description',
    eventReceiverName: 'Event Receiver Name',
    messageFormat: 'Message Format',
    inputType: 'Input Event Adapter Type',
    inputStreamId: 'Input Stream Id',
    publisherName: 'Event Publisher Name',
    outputType: 'Output Event Adapter Type ',
    lastTime: 'Last online time',
    statue: 'Statue',
    gateName: 'Gateway Name',
    gateKey: 'Gateway Key',
    deviceName: 'Deveice Name',
    regist: 'Regist',
    deploy: 'Deploy',
    online: 'Online',
    comment: 'Comment',
    operation: 'Operation',
    enable: 'Enable',
    df_size: 'df_size',
    df_size_time: 'df_size_time'
  },
  button: {
    delete: 'Delete',
    edit: 'Edit',
    createProject: 'Create Project',
    cancel: 'Cancel',
    confirm: 'Confirm',
    stream: 'Event Stream',
    receiver: 'Event Receivers',
    publisher: 'Event Publishers',
    execution: 'Execution Plan',
    addStream: 'Add Event Stream',
    editStream: 'Update Event Stream',
    addReceiver: 'Add Event Receiver',
    addPublisher: 'Add Event Publisher',
    addExecution: 'Add Execution Plan',
    detail: 'Detail',
    back: 'Back',
    add: 'Add',
    reset: 'Reset',
    update: 'Update',
    validate: 'Validate',
    import: 'Import',
    export: 'Export',
    device: 'Device',
    gateway: 'Gateway',
    disabled: 'Disabled',
    enable: 'Enable'

  },
  stream: {
    attrName: 'Attribute Name',
    attrType: 'Attribute Type',
    'defineEventStream': 'Define New Event Stream',
    'enterEventStreamDetails': 'Enter Event Stream Details',
    'streamAttributes': 'Stream Attributes',
    'metaDataAttributes': 'Meta Data Attributes',
    'noMetaData': 'No meta data attributes are defined',
    'payloadDataAttributes': 'Payload Data Attributes',
    'noPayloadData': 'No payload data attributes are defined',
    'correlationDataAttributes': 'Correlation Data Attributes',
    'noCorrelationData': 'No correlation data attributes are defined',
    detail: 'Event Stream Details'
  },
  receiver: {
    addReceiver: 'Add Event Receiver',
    createReceiver: 'Create a New Event Receiver',
    receiverName: 'Event Receiver Name',
    inputEvent: 'Input Event Adapter Type',
    kafkaGroup: 'Kafka Group',
    kafkaTopic: 'Kafka Topic',
    eventStream: 'Event Stream',
    messageFormat: 'Message Format',
    mappingConf: 'Mapping Configuration',
    mapping: 'Mapping',
    xpath: 'XPath Prefixes',
    prefix: 'Prefixes',
    nameSpace: 'Name Space',
    xpathExpression: 'Parent Selector XPath Expression',
    properties: 'Properties',
    jsonMapping: 'Available JSON Mappings',
    jsonPath: 'JsonPath',
    mappedTo: 'Mapped To',
    type: 'Type',
    defaultValue: 'Default Value',
    regularExpressDefine: 'Regular Expression Defintions',
    regularExpress: 'Regular Expression',
    availableText: 'Available Text Mappings',
    editReceiver: 'Edit Event Receiver Configuration',
    receiverConf: 'Event Receiver Configuration',
    detail: 'Event Receiver Details'
  },
  publisher: {
    addPublisher: 'Add Event Publisher',
    createPublisher: 'Create a New Event Publisher',
    publisherName: 'Event Publisher Name ',
    eventSource: 'Event Source',
    streamAttr: 'Stream Attributes',
    outputEvent: 'Output Event Adapter Type',
    staticProperty: 'Static Adapter Properties',
    host: 'Proxy Host',
    port: 'Proxy Port',
    httpMethod: 'Http Client Method',
    url: 'URL',
    userName: 'Username',
    password: 'Password',
    header: 'Headers',
    outputMappingContent: 'OutputMapping Content',
    inLine: 'In-Line',
    pickFromRegistry: 'Pick from registry',
    editPublisher: 'Edit Event Publisher Configuration',
    publisherConf: 'Event Publisher Configuration',
    detailPublisher: 'Enter Event Publisher Details'
  },
  execution: {
    createExecution: 'Create a New Execution Plan',
    enterDetail: 'Enter Event Processor Details',
    importStream: 'Import Stream',
    exportStream: 'Export Stream',
    includeArbitrary: 'Include Arbitrary',
    editExecution: 'Edit Execution Plan Configuration',
    executionFlow: 'Execution Plan Flow',
    executionPlan: 'Execution Plan ',
    eventDetail: 'Event Processor Details'
  },
  overview: {
    overview: 'Overview',
    timeline: 'Timeline',
    exception: 'Exception',
    configuration: 'Configuration',
    receiver: 'Event Receivers',
    stream: 'Event Streams',
    execution: 'Event Execution',
    publisher: 'Event Publishers'
  },
  messageCommunication: {
    createTopic: 'Define Topic'
  },
  management: { // 项目注册
    createPro: 'Create Project',
    editProject: 'Edit Project',
    deletePro: 'Delete Project',
    basicInfo: 'Basic Information',
    addNode: 'Add Node',
    list: 'List',
    nodeType: 'Node Type',
    deleGate: 'Delete Gateway',
    deleDevice: 'Delete Device',
    updateTime: 'Update Time',
    deleteTopic: 'Delete Topic',
    defineTopic: 'Define Topic',
    topicName: 'Topic Name',
    address: 'Deveice Address',
    gateAddress: 'Gateway Address',
    type: 'Device Type',
    gateType: 'Gateway Type',
    logList: 'Logger List'
  },
  deploy: {
    createSystem: 'Create Embedded System',
    deleteTem: 'Delete Template'
  }
}
